/**
 * @author Volovodov Roman
 */
package org.luwrain.windows.speech;

/**
 * @author Volovodov Roman
 * Класс, определяющий доступ к библиотеке-прослойке, для синтеза речи
 * todo: добавить возможность создания нескольких экземпляров объекта (поддержка одновременно нескольких голосовых интерфейсов, в т.ч. одновременно говорящих)
 * todo: добавить поддержку многопоточности или контроль за синхронностью вызовов 
 */
class  SAPIImpl extends SAPIImpl_constants
{
	/**
	 * Во время загрузки библиотеки однократно происходит иннициализация SAPI
	 * todo: корректная обработка ошибок иннициализации SAPI  
	 */
	static
	{
		// загружаем динамическу библиотеку под текущую архитектуру (32 или 64 бита)
    	System.loadLibrary("SAPIImpl."+System.getProperty("sun.arch.data.model"));
	}
	/**
	 * Переходит к следующему голосовому токену (при первом вызове к первому) и возвращает его идентификатор
	 * Должен быть использован после вызова searchVoiceByAttributes или предыдущего успешного getNextVoiceIdFromList
	 * Метод необходимо использовать перед вызовом selectCurrentVoice() 
	 * @return строку с текущим идентификатором голосового токена либо nul, если больше голосовых токенов в списке нет
	 */
	native public static String getNextVoiceIdFromList();
	/**
	 * Устанавливает текущим голосовой движок, выбранный ранее, например методом getNextVoiceIdFromList 
	 * @return	код ошибки или 0, если успех
	 */
	native public static int selectCurrentVoice();
	/**
	 * Выбор голосового токена (комбинация голосовых движков для используемых в операционной системе языков,
	 * например комбинация двух - английский и русский)
	 * todo: проверить, как голосовые движки работают в мультиязычной среде с поддержкой трех и более языков
	 * @param   id	строковый идентификатор токена (в SAPI это результат вызова GetId(&id) для объекта CComPtr<ISpObjectToken>)
	 * @return	код ошибки или 0, если успех
	 */
	native public static int selectVoiceById(String id);
	/**
	 * Выбор голосового токена по критерию с помощью атрибутов. Наименование атрибутов и их значения определяются голосовыми движками.
	 * В результате метода сбрасывается текущее перечисление списка голосовых движков и устанавливается новое, в соответствии с заданным критерием
	 * @param cond	Список значений атрибутов, например Name=Alena, Language=409, Gender=male и т.п., разделенные ';'
	 * @return	код ошибки или 0, если успех
	 */
	native public static int searchVoiceByAttributes(String cond);
	/**
	 * Отсылает текстовую строку для синтеза речи с помощью SAPI, текущий голосовой токен уже должен быть выбран
	 * Сообщение будет произнесено с использованием текущего звукового устройства 'по умолчанию',
	 * если предыдущее сообщение было отослано в асинхронном режиме 
	 * @param 	text	Содержит сообщение, для которого необходимо синтезировать голос
	 * @param	flags	Битовая маска, определяет параметры, такие как асинхронный вызов или наличие xml marckup 
	 * @return	код ошибки или 0, если успех
	 */
	native public static int speak(String text, int flags);
	/**
	 * Отсылает текстовую строку для синтеза речи с помощью SAPI, текущий голосовой токен уже должен быть выбран
	 * Сообщение будет произнесено с использованием текущего звукового устройства 'по умолчанию',
	 * если предыдущее сообщение было отослано в асинхронном режиме
	 * Используются параметры по умолчанию - Асинхронный режим и XML Marckup 
	 * @return	код ошибки или 0, если успех
	 */
	public static int speak(String text) {return speak(text,0);}
	
	
}
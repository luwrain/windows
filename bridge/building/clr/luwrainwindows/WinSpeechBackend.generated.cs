//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.35317
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LuwrainWindows {
    
    
    #region Component Designer generated code 
    public partial class WinSpeechBackend_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::LuwrainWindows.@__WinSpeechBackend.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::LuwrainWindows.WinSpeechBackend), typeof(global::LuwrainWindows.WinSpeechBackend_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::LuwrainWindows.WinSpeechBackend), typeof(global::LuwrainWindows.WinSpeechBackend_))]
    internal sealed partial class @__WinSpeechBackend : global::java.lang.Object {
        
        internal new static global::java.lang.Class staticClass;
        
        private @__WinSpeechBackend(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::LuwrainWindows.@__WinSpeechBackend.staticClass = @__class;
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__WinSpeechBackend);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Say", "Say0", "(Ljava/lang/String;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "SayLetter", "SayLetter1", "(C)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "silence", "silence2", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "SetPitch", "SetPitch3", "(I)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorWinSpeechBackend0", "__ctorWinSpeechBackend0", "(Lnet/sf/jni4net/inj/IClrProxy;)V"));
            return methods;
        }
        
        private static void Say0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle text) {
            // (Ljava/lang/String;)V
            // (LSystem/String;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::LuwrainWindows.WinSpeechBackend @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::LuwrainWindows.WinSpeechBackend>(@__env, @__obj);
            @__real.Say(global::net.sf.jni4net.utils.Convertor.StrongJ2CString(@__env, text));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void SayLetter1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, char letter) {
            // (C)V
            // (C)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::LuwrainWindows.WinSpeechBackend @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::LuwrainWindows.WinSpeechBackend>(@__env, @__obj);
            @__real.SayLetter(letter);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void silence2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::LuwrainWindows.WinSpeechBackend @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::LuwrainWindows.WinSpeechBackend>(@__env, @__obj);
            @__real.silence();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void SetPitch3(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int value) {
            // (I)V
            // (I)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::LuwrainWindows.WinSpeechBackend @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::LuwrainWindows.WinSpeechBackend>(@__env, @__obj);
            @__real.SetPitch(value);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorWinSpeechBackend0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::LuwrainWindows.WinSpeechBackend @__real = new global::LuwrainWindows.WinSpeechBackend();
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::LuwrainWindows.@__WinSpeechBackend(@__env);
            }
        }
    }
    #endregion
}
